name: AutoBuild

permissions:
  contents: write # 给予写入仓库内容的权限

on:
  push:
    tags:
      - v* # 当推送以v开头的标签时触发此工作流

jobs:
  release:
    name: build and release electron app # 任务名称
    runs-on: ${{ matrix.os }} # 在matrix.os定义的操作系统上运行

    if: startsWith(github.ref, 'refs/tags/') # 只在推送标签时运行
    strategy:
      fail-fast: false # 如果一个任务失败,其他任务继续运行
      matrix:
        os: [windows-latest, macos-latest] # 在Windows和macOS上运行任务

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4 # 检出代码仓库

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # 安装Node.js 20（这里node环境是能够运行代码的环境）

      - name: Install Dependencies
        run: |
          npm i -g pnpm
          pnpm install

      # 添加构建前的目录检查
      - name: Check directory structure
        shell: bash
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Electron directory:"
          ls -la electron/ || echo "No electron directory"

      - name: Build Electron App for windows
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 添加构建后文件检查
      - name: Check built files
        run: |
          echo "Built files in dist-electron directory:"
          ls -la dist-electron/ || echo "No dist-electron directory"

      # 添加最终文件检查
      - name: Verify final artifacts
        run: |
          echo "Final artifacts:"
          ls -la dist-electron/ || echo "No dist directory"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: dist-electron/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist-electron/**/*.exe
            dist-electron/**/*.dmg
            dist-electron/**/*.yml
            dist-electron/**/*.zip
            dist-electron/**/*.blockmap
          draft: false
          prerelease: false
        env:
          GH_TOKEN: ${{ secrets.ELECTRON_TOKEN }}
